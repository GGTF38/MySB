#!/bin/bash
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

if [ -z "${vars:-}" ] || [ "$vars" -eq 0 ]; then
	# shellcheck source=ci/scripts/00-load_vars.bsh
	source "$(dirname "$0")/00-load_vars.bsh"
fi
if [[ -n "${1}" ]]; then
	rm -rf /tmp/shellcheck_scan
	if [[ -d "${1}" ]]; then
		cp -al "${1}" /tmp/shellcheck_scan
		sDirToScan="/tmp/shellcheck_scan"
	else
		echo -e "${CYELLOW}${1} not a valid directory:${CEND} ${CRED}Failed${CEND}"
		exit
	fi
else
	if [[ -f /.dockerenv ]]; then
		if [[ -n "${CI_PROJECT_PATH}" ]]; then
			sDirToScan="/builds/${CI_PROJECT_PATH}"
		else
			echo -e "${CYELLOW}Secret Variable \$CI_PROJECT_PATH:${CEND} ${CRED}Failed${CEND}"
			exit
		fi
	else
		echo -e "${CYELLOW}You are not in 'project_validation' images:${CEND} ${CRED}Failed${CEND}"
		exit
	fi
fi

# sNoTemplates=$(find "${sDirToScan}"/ -type f -not -path "*web*" -not -path "*templates*" -not -path "*.git*" -not -path "*db*" -not -path "*files*" -not -path "*templates*" -not -path "*sources*" -not -path "*temp*" -not -path "*logs*" -not -path "*ssl*" -not -path "*images*" \( ! -name "*.md" \) -print0 | sort -z | xargs -r0)
# sTemplates=$(find "${sDirToScan}"/templates/ \( -name "*.init.d*" -or -name "*.sh.*" -or -name "*.bsh.*" \))
# sImages=$(find "${sDirToScan}"/ci/images/*/rootfs/scripts \( -name "*.sh" -or -name "*.bsh" \))
# sFilesList="$sNoTemplates $sTemplates $sImages"

# echo && echo -e "${CBLUE}*** Check Syntax with Shellcheck ***${CEND}"

# if (shellcheck -s bash -x -f tty -S error "${sFilesList}"); then
# 	echo -e "${CYELLOW}Check Syntax with shellcheck:${CEND} ${CGREEN}Passed${CEND}"
# else
# 	echo -e "${CYELLOW}Check Syntax with shellcheck:${CEND} ${CRED}Failed${CEND}"
# 	nReturn=$((nReturn + 1))
# fi

sFilesListSh="$(grep -IRl "\(#\!/bin/\|shell\=\)sh" --exclude-dir ".git" --exclude-dir ".vscode" "${sDirToScan}/")"
if [ -n "${sFilesListSh}" ]; then
	echo && echo -e "${CBLUE}*** Check Syntax with Shellcheck (sh) ***${CEND}"
	for sFile in ${sFilesListSh}; do
		if ! shellcheck -s sh -x -f tty -S error "${sFile}"; then
			echo -e "${CYELLOW}${sFile}:${CEND} ${CRED}Failed${CEND}"
			nReturn=$((nReturn + 1))
		else
			echo -e "${CYELLOW}${sFile}:${CEND} ${CGREEN}Passed${CEND}"
		fi
	done
fi

sFilesListBash="$(grep -IRl "\(#\!/bin/\|shell\=\)bash" --exclude-dir ".git" --exclude-dir ".vscode" --exclude-dir ".vscode" "${sDirToScan}/")"
if [ -n "${sFilesListBash}" ]; then
	echo && echo -e "${CBLUE}*** Check Syntax with Shellcheck (bash) ***${CEND}"
	for sFile in ${sFilesListBash}; do
		if ! shellcheck -s bash -xa -f tty -S error "${sFile}"; then
			echo -e "${CYELLOW}${sFile}:${CEND} ${CRED}Failed${CEND}"
			nReturn=$((nReturn + 1))
		else
			echo -e "${CYELLOW}${sFile}:${CEND} ${CGREEN}Passed${CEND}"
		fi
	done
fi

# if [ -n "${sFilesListSh}" ]; then
# 	echo && echo -e "${CBLUE}*** Check BASH Syntax (sh) ***${CEND}"
# 	for file in ${sFilesListSh}; do
# 		sed -i '/includes_before/d' "${file}"
# 		sed -i '/includes_after/d' "${file}"
# 		sed -i '/#!\/bin\/bash/d' "${file}"
# 		sed -i '1iset -n' "${file}"
# 		echo "set +n" >>"${file}"
# 		dos2unix "${file}" &>/dev/null
# 		if (! bash "${file}"); then
# 			echo -e "${CYELLOW}${file}:${CEND} ${CRED}Failed${CEND}"
# 			nReturn=$((nReturn + 1))
# 		else
# 			echo -e "${CYELLOW}${file}:${CEND} ${CGREEN}Passed${CEND}"
# 		fi
# 	done
# fi

# if [ -n "${sFilesListBash}" ]; then
# 	echo && echo -e "${CBLUE}*** Check BASH Syntax (bash) ***${CEND}"
# 	for file in ${sFilesListBash}; do
# 		sed -i '/includes_before/d' "${file}"
# 		sed -i '/includes_after/d' "${file}"
# 		sed -i '/#!\/bin\/bash/d' "${file}"
# 		sed -i '1iset -n' "${file}"
# 		echo "set +n" >>"${file}"
# 		dos2unix "${file}" &>/dev/null
# 		if (! bash "${file}"); then
# 			echo -e "${CYELLOW}${file}:${CEND} ${CRED}Failed${CEND}"
# 			nReturn=$((nReturn + 1))
# 		else
# 			echo -e "${CYELLOW}${file}:${CEND} ${CGREEN}Passed${CEND}"
# 		fi
# 	done
# fi

export nReturn

##################### LAST LINE ######################################
