---
stages:
    - check_develop
    - check_master
    - build_images

# #### Templates - BoF
.tmpl_check: &tmpl_check
    image: ${CI_REGISTRY_IMAGE}/project_check/project_check:latest
    script:
        - |
            for script in $(find ${CI_PROJECT_DIR}/ci/scripts/ -type f -name "[0-9][0-9]-*.bsh" | sort -n); do
                echo
                echo ${script}
                echo
                source ${script}
            done
# #### Templates - EoF

# #### Project check for develop branch (merge request)
check_develop:
    stage: check_develop
    only:
      refs:
        - merge_requests
    allow_failure: false
    <<: *tmpl_check


# #### Project check for master branch (after merge request & schedules)
check_master:
    stage: check_master
    only:
      refs:
        - master
        - schedules
    when: on_success
    <<: *tmpl_check


# #### BUILD
Building Docker Images:
    image: docker:dind
    stage: build_images
    only:
      refs:
        - schedules
      variables:
        - $BUILD == "True"
    services:
        - docker:dind
    variables:
        DOCKER_HOST: tcp://docker:2375
        DOCKER_DRIVER: overlay2
    before_script:
        - apk add bash
        - docker version
        - echo $HUB_PASSWORD | docker login -u $HUB_USER --password-stdin
        - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin registry.gitlab.com
    script:
        - bash ${CI_PROJECT_DIR}/ci/scripts/100-start_build.bsh
    after_script:
        - docker logout ${CI_REGISTRY}
        - docker logout
